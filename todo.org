* add GOTO fuse
** extend while landing on NOP/GOTO
*** reuse drill_pc()
* add globals
** add Glob struct
** add alloc
** add glob type
** readme
(fun: get-foo [] Int (G foo))
(let [(G foo) 35 bar (+ (get-foo) 7)] bar)
* add test op
** fib
** closure
* add BRANCH if pc
** default +1
** fuse if like else
* fuse unused
** copy/move/load
** fibtail calls (copy 1 n) & (copy 2 m) repeatedly
*** 11 not written between
* add multi id support to fun arg list
** n a b Int
* add fun macro
** create lambda
* add CALLI2 op
** fun as separate op
* add LOAD_NIL op
** enable nil type emit
* add tusks
** pure green threads
* add sym type/reader
* add Type.isa
* add scope & state to bench macro like (let)
* add fun call type check
* add multi
** add DISP op
* add pattern matching in fun arg list
** anything but Id
* add string type
** add reader
** add unquotes
*** "foo %(42) bar"
*** %% escape
* add fix type
** encoded in uint64
** add reader
*** .25
* move readers into M
* add Fuse type
** move fuses into M
